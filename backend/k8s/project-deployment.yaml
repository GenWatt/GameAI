apiVersion: apps/v1
kind: Deployment
metadata:
  name: project-api
  namespace: gameai-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: project-api
  template:
    metadata:
      labels:
        app: project-api
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '5001'
    spec:
      containers:
      - name: project-api
        image: gameai/project-api:dev
        ports:
        - containerPort: 5001
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: gameai-secrets-dev
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gameai-secrets-dev
              key: postgres-password
        - name: ASPNETCORE_URLS
          value: "http://+:5001"
        - name: ASPNETCORE_ENVIRONMENT
          value: "Docker"
        - name: DOTNET_USE_POLLING_FILE_WATCHER
          value: "true"
        - name: ConnectionStrings__ProjectDb
          value: "Host=$(POSTGRES_HOST);Port=5432;Database=$(POSTGRES_DB);Username=$(POSTGRES_USER);Password=$(POSTGRES_PASSWORD)"
        - name: Rabbit__Host
          valueFrom:
            configMapKeyRef:
              name: gameai-config
              key: RABBIT__HOST
        - name: Rabbit__User
          valueFrom:
            configMapKeyRef:
              name: gameai-config
              key: RABBIT__USER
        - name: Rabbit__Pass
          valueFrom:
            secretKeyRef:
              name: gameai-secrets-dev
              key: rabbit-password
        envFrom:
        - configMapRef:
            name: gameai-config
---
apiVersion: v1
kind: Service
metadata:
  name: project-api
  namespace: gameai-dev
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
    prometheus.io/port: '5001'
spec:
  type: ClusterIP
  ports:
  - port: 5001
    targetPort: 5001
  selector:
    app: project-api