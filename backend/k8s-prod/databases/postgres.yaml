# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: postgres-data
#   namespace: gameai-prod
# spec:
#   accessModes: [ "ReadWriteOnce" ]
#   resources:
#     requests:
#       storage: 20Gi
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: postgres
#   namespace: gameai-prod
#   labels:
#     app.kubernetes.io/name: postgres
#     app.kubernetes.io/component: database
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: postgres
#   template:
#     metadata:
#       labels:
#         app.kubernetes.io/name: postgres
#         app.kubernetes.io/component: database
#     spec:
#       securityContext:
#         runAsNonRoot: true
#         runAsUser: 999
#         fsGroup: 999
#       containers:
#       - name: postgres
#         image: postgres:16-alpine
#         imagePullPolicy: IfNotPresent
#         ports:
#         - containerPort: 5432
#         env:
#         - name: POSTGRES_DB
#           valueFrom:
#             configMapKeyRef:
#               name: gameai-config-prod
#               key: POSTGRES_DB
#         - name: POSTGRES_USER
#           valueFrom:
#             secretKeyRef:
#               name: gameai-secrets
#               key: postgres-user
#         - name: POSTGRES_PASSWORD
#           valueFrom:
#             secretKeyRef:
#               name: gameai-secrets
#               key: postgres-password
#         volumeMounts:
#         - name: data
#           mountPath: /var/lib/postgresql/data
#         securityContext:
#           allowPrivilegeEscalation: false
#           readOnlyRootFilesystem: false
#           capabilities:
#             drop: ["ALL"]
#       volumes:
#       - name: data
#         persistentVolumeClaim:
#           claimName: postgres-data
# ---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: gameai-prod
  labels:
    app.kubernetes.io/name: postgres
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app.kubernetes.io/name: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: gameai-prod
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/component: database
    spec:
      initContainers:
        - name: fix-permissions
          image: busybox
          command: ["sh", "-c", "chown -R 999:999 /var/lib/postgresql/data"]
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      containers:
        - name: postgres
          image: postgres:16-alpine
          env:
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: gameai-config-prod
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: gameai-secrets
                  key: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gameai-secrets
                  key: postgres-password
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgres-data
